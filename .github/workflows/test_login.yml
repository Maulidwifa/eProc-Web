name: Robot Test - Test Login

on:
  schedule:
    - cron: '30 5 * * 1,3'  # Menjalankan setiap Senin dan Rabu pukul 5:30 AM UTC
    - cron: '30 5 * * 2,4'  # Menjalankan setiap Selasa dan Kamis pukul 5:30 AM UTC

  push:
    branches: [ master ]
    paths:
      - "testSuite/Tim_OP/test_login.robot"

jobs:
  test:
    runs-on: ubuntu-latest
     
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.13.2
        uses: actions/setup-python@v3
        with:
          python-version: 3.13.2
   
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
   
      - name: Test with RobotFramework
        run: robot --outputdir results testSuite/Tim_OP/test_login.robot | tee robot_output.log
         
      - name: Extract Test Summaries
        id: extract
        run: |
          summary=$(sed -n '2p' robot_output.log | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
          details=$(grep -E '[0-9]+ tests, [0-9]+ passed, [0-9]+ failed' robot_output.log | tail -n1)
          echo "summary=$summary" >> $GITHUB_OUTPUT
          echo "details=$details" >> $GITHUB_OUTPUT
          echo "Extracted summary: $summary"
          echo "Extracted details: $details"

      - name: Upload Robot Framework Reports (Artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: robot-reports
          path: results/

      - name: Send Slack Notification (text only)
        if: always()
        run: |
          curl -X POST -H 'Content-type: application/json' \
          --data '{
            "text": "*[Robot Test - '"${{ steps.extract.outputs.summary }}"']*\nResult: '"${{ steps.extract.outputs.details }}"'\n<https://github.com/Maulidwifa/eProc-Web/actions/runs/${{ github.run_id }}|Lihat detail di GitHub Actions>"
          }' ${{ secrets.SLACK_WEBHOOK_URL }}

            
# name: Robot Test - Test Login

# on:
#   schedule:
#     # - cron: '0 0 */4 * *'  # Menjalankan setiap 4 jam sekali pada waktu UTC
#     - cron: '30 5 * * 1,3'  # Menjalankan setiap Senin dan Rabu pukul 5:30 AM UTC
#     - cron: '30 5 * * 2,4'  # Menjalankan setiap Selasa dan Kamis pukul 5:30 AM UTC

#   push:
#     branches: [ master ]
#     paths:
#       - "testSuite/Tim_OP/test_login.robot"
 
# jobs:
#   test:
#     runs-on: ubuntu-latest
     
#     steps:
#       - uses: actions/checkout@v3
#       - name: Set up Python 3.13.2
#         uses: actions/setup-python@v3
#         with:
#           python-version: 3.13.2
   
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt
   
#       - name: Test with RobotFramework
#         run: robot --outputdir results testSuite/Tim_OP/test_login.robot | tee robot_output.log
         
#       - name: Extract Test Summaries
#         id: extract
#         run: |
#           # Mengambil baris pertama (misalnya, "Test Login")
#           summary=$(sed -n '2p' robot_output.log | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')
          
#           # Mengambil baris yang berisi pola "6 tests, 6 passed, 0 failed"
#           details=$(grep -E '[0-9]+ tests, [0-9]+ passed, [0-9]+ failed' robot_output.log | tail -n1)
#           echo "summary=$summary" >> $GITHUB_OUTPUT
#           echo "details=$details" >> $GITHUB_OUTPUT
#           echo "Extracted summary: $summary"
#           echo "Extracted details: $details"

#       - name: Upload Robot Framework Reports
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: robot-reports
#           path: results/

#       - name: Send Email with Test Summary via SendGrid
#         if: always()
#         run: |
#           echo "Sending email with summary: ${{ steps.extract.outputs.summary }}"
#           curl --request POST \
#             --url https://api.sendgrid.com/v3/mail/send \
#             --header "Authorization: Bearer ${{ secrets.MAULID_APIKEYSENDGRID }}" \
#             --header "Content-Type: application/json" \
#             --data '{
#               "personalizations": [{
#                 "to": [{"email": "maulidwifairuz@gmail.com"}],
#                 "subject": "Test Web - '"${{ steps.extract.outputs.summary }}"'"
#               }],
#               "from": {"email": "'"${{ secrets.SENDGRID_EMAIL }}"'"},
#               "content": [{
#                 "type": "text/plain",
#                 "value": "Result Test: '"${{ steps.extract.outputs.details }}"'"
#               }]
#             }'